plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext {
    set('springCloudVersion', "2025.0.0")
}

dependencies {
    // Jenkins Java Client
    implementation "com.offbytwo.jenkins:jenkins-client:0.3.8"

    // JAXB for Java 11+
    implementation 'jakarta.xml.bind:jakarta.xml.bind-api:4.0.0'
    implementation 'org.glassfish.jaxb:jaxb-runtime:4.0.2'

    // SonarQube 연동을 위한 WebClient
    // implementation "org.springframework.boot:spring-boot-starter-webflux" // MVC와 충돌 가능성 있어 주석 처리

    // Kubernetes Client (fabric8)
    implementation "io.fabric8:kubernetes-client:6.10.0"

    // Spring Cloud Kubernetes (fabric8 기반)
    implementation "org.springframework.cloud:spring-cloud-starter-kubernetes-fabric8"

    // Helm/Kustomize CLI 실행 (Shell 명령 실행용)
    implementation "org.zeroturnaround:zt-exec:1.12"

    // Micrometer + Prometheus
    implementation "io.micrometer:micrometer-registry-prometheus"

    // spring
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-aop'
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.7.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'
    implementation 'org.yaml:snakeyaml:2.2'
    implementation 'org.json:json:20250517'

    // DB
    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra'
//    implementation 'org.springframework.boot:spring-boot-starter-data-cassandra-reactive'

    // async
//    implementation 'org.apache.kafka:kafka-streams'
//    implementation 'org.springframework.kafka:spring-kafka'
//    implementation 'org.springframework.amqp:spring-rabbit-stream'
//    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    // cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    // implementation 'org.springframework.cloud:spring-cloud-starter-gateway-server-webmvc' // 필요 시 주석 해제
    // implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client' // 필요 시 주석 해제
    // implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server' // 필요 시 주석 해제
    // implementation 'org.springframework.cloud:spring-cloud-starter-zookeeper-config'      // 필요 시 주석 해제
    // implementation 'org.springframework.cloud:spring-cloud-starter-zookeeper-discovery'   // 필요 시 주석 해제

    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.amqp:spring-rabbit-test'
    testImplementation 'org.springframework.kafka:spring-kafka-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    // For JSON logging with Logback and Loki
    implementation 'net.logstash.logback:logstash-logback-encoder:7.4'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('bootBuildImage') {
    builder = 'paketobuildpacks/builder-jammy-base:latest'
}

tasks.named('test') {
    useJUnitPlatform()
}
